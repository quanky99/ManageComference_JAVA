/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manage_comference.ui;

import java.awt.Image;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import manage_comference.entity.AccountDAO;
import manage_comference.entity.AdUser;
import manage_comference.entity.HoiNghiDAO;
import manage_comference.entity.Hoinghi;
import manage_comference.entity.Participants;
import manage_comference.entity.ParticipantsDAO;
import manage_comference.entity.ParticipantsSignup;
import manage_comference.entity.PaticipantsSignupDAO;

/**
 *
 * @author Admin
 */
public class StaticComference_User extends javax.swing.JFrame {

    /**
     * Creates new form Static_Comference
     */
    public StaticComference_User() {
        initComponents();
        //myinit();
    }

    public StaticComference_User(String u) {
        initComponents();
        myinit(u);
    }

    public void myinit(String u) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        userName.setText(u);
        List<AdUser> list4 = AccountDAO.checktontaiAccount(userName.getText());
        //System.out.println("username " + userName.getText());
        //System.out.println("id " + list4.get(0).getIdAccount());
        List<Participants> list5 = ParticipantsDAO.laydsthamdu(list4.get(0).getIdAccount());
        System.out.println("aaa");
        List<ParticipantsSignup> list6 = PaticipantsSignupDAO.laydsdadangky(list4.get(0).getIdAccount());
        //System.out.println(list);
        if (list5 != null) {
            for (Participants p : list5) {
                Vector row = new Vector();
                row.add(p.getHoinghi().getIdHn());
                row.add(p.getHoinghi().getTenHn());
                row.add(p.getHoinghi().getDiadiem().getTenDd());

                model.addRow(row);
            }
            jTable1.setAutoCreateRowSorter(true);
            jTable1.setModel(model);
        } else {
            System.out.println("null");
        }
        if (list6 != null) {
            for (ParticipantsSignup p : list6) {
                Vector row = new Vector();
                row.add(p.getHoinghi().getIdHn());
                row.add(p.getHoinghi().getTenHn());
                row.add(p.getHoinghi().getDiadiem().getTenDd());

                model2.addRow(row);
            }
            jTable2.setAutoCreateRowSorter(true);
            jTable2.setModel(model2);
        } else {
            System.out.println("null");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        searchname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        userName = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        searchdd = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        backmhc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1350, 700));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Thống Kê Các Hội Nghị");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên hội nghị", "Địa điểm"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(51, 204, 255));
        jButton1.setText("Xem chi tiết");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Xem chi tiết");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        userName.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        userName.setText("jLabel5");

        jButton3.setText("Tìm kiếm theo tên hội nghị");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Tìm kiếm theo địa điểm tổ chức");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setText("Danh sách tham dự");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên hội nghị", "Địa điểm"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setText("Danh sách đăng ký tham dự");

        backmhc.setText("Màn hình chính");
        backmhc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backmhcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(366, 366, 366)
                                .addComponent(backmhc)
                                .addGap(18, 18, 18)
                                .addComponent(userName))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(searchname, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(searchdd, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton4)
                                    .addComponent(jButton2))))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel4)
                                .addGap(39, 39, 39)
                                .addComponent(jButton1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userName)
                    .addComponent(backmhc))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)
                            .addComponent(searchdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(jLabel5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jButton1))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 61, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))))
                .addContainerGap())
        );

        jLabel2.setVisible(false);
        jLabel3.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<Hoinghi> list = HoiNghiDAO.layDanhSachHoiNghi();
        DetailComference dc = new DetailComference();
        int index = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();

        index = jTable1.convertRowIndexToModel(index);
        //System.out.println(model.getValueAt(index, 0));
        int pos = ((int) model.getValueAt(index, 0));
        // System.out.println(pos);
        //System.out.println(list.get(0).getMotaChiTiet());
        ImageIcon icon = new ImageIcon(list.get(((int) model.getValueAt(index, 0)) - 1).getHinhanh().toString());
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(dc.hinhanh.getWidth(), dc.hinhanh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(imgScale);
        dc.hinhanh.setIcon(i);
        dc.loaibang.setText("thamdu");
        dc.userName.setText(userName.getText());
        dc.mahn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getIdHn().toString());
        dc.tenhn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getTenHn().toString());
        dc.motachitiet.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getMotaChitiet().toString());
        dc.thoigian.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getThoigian().toString());
        dc.diadiem.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getTenDd().toString());
        dc.soluong.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getSucchua().toString());
        dc.diachi.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getDiachi().toString());

        DefaultTableModel model2 = (DefaultTableModel) dc.jTable1.getModel();
        System.out.println("ok");
        String id = Integer.toString((int) model.getValueAt(index, 0));
        System.out.println(id);
        List<Participants> list2;
        List<ParticipantsSignup> list3;
        list2 = HoiNghiDAO.layDanhSachKhachThamDu(id);
        System.out.println(list2);
        if (list2 != null) {
            for (Participants p : list2) {
                Vector row = new Vector();
                row.add(p.getAdUser().getUsername());
                row.add(p.getAdUser().getHoten());
                model2.addRow(row);
            }
        } else {
            System.out.println("null");
        }
        //Bang danh sach dang ky
        DefaultTableModel model3 = (DefaultTableModel) dc.jTable2.getModel();
        System.out.println("ok");
        String id3 = Integer.toString((int) model.getValueAt(index, 0));
        System.out.println(id3);
        list3 = PaticipantsSignupDAO.layDanhSachKhachDangKy(id3);
        System.out.println(list2);
        if (list3 != null) {
            for (ParticipantsSignup p : list3) {
                Vector row = new Vector();
                row.add(p.getAdUser().getUsername());
                row.add(p.getAdUser().getHoten());
                model3.addRow(row);
            }
        } else {
            System.out.println("null");
        }

        dc.setVisible(true);
        dc.dk.setVisible(false);
        dc.huydk.setVisible(true);
        // dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        List<Hoinghi> list = HoiNghiDAO.layDanhSachHoiNghi();
        DetailComference dc = new DetailComference();
        int index = jTable2.getSelectedRow();
        TableModel model = jTable2.getModel();

        index = jTable2.convertRowIndexToModel(index);
        //System.out.println(model.getValueAt(index, 0));
        int pos = ((int) model.getValueAt(index, 0));
        // System.out.println(pos);
        //System.out.println(list.get(0).getMotaChiTiet());
        ImageIcon icon = new ImageIcon(list.get(((int) model.getValueAt(index, 0)) - 1).getHinhanh().toString());
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(dc.hinhanh.getWidth(), dc.hinhanh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(imgScale);
        dc.hinhanh.setIcon(i);
        dc.loaibang.setText("chodangky");
        dc.userName.setText(userName.getText());
        dc.mahn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getIdHn().toString());
        dc.tenhn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getTenHn().toString());
        dc.motachitiet.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getMotaChitiet().toString());
        dc.thoigian.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getThoigian().toString());
        dc.diadiem.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getTenDd().toString());
        dc.soluong.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getSucchua().toString());
        dc.diachi.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getDiachi().toString());

        DefaultTableModel model2 = (DefaultTableModel) dc.jTable1.getModel();
        System.out.println("ok");
        String id = Integer.toString((int) model.getValueAt(index, 0));
        System.out.println(id);
        List<Participants> list2;
        List<ParticipantsSignup> list3;
        list2 = HoiNghiDAO.layDanhSachKhachThamDu(id);
        System.out.println(list2);
        if (list2 != null) {
            for (Participants p : list2) {
                Vector row = new Vector();
                row.add(p.getAdUser().getUsername());
                row.add(p.getAdUser().getHoten());
                model2.addRow(row);
            }
        } else {
            System.out.println("null");
        }
        //Bang danh sach dang ky
        DefaultTableModel model3 = (DefaultTableModel) dc.jTable2.getModel();
        System.out.println("ok");
        String id3 = Integer.toString((int) model.getValueAt(index, 0));
        System.out.println(id3);
        list3 = PaticipantsSignupDAO.layDanhSachKhachDangKy(id3);
        System.out.println(list2);
        if (list3 != null) {
            for (ParticipantsSignup p : list3) {
                Vector row = new Vector();
                row.add(p.getAdUser().getUsername());
                row.add(p.getAdUser().getHoten());
                model3.addRow(row);
            }
        } else {
            System.out.println("null");
        }

        dc.setVisible(true);
        dc.dk.setVisible(false);
        dc.huydk.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backmhcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backmhcActionPerformed
        ListComference_User LU = new ListComference_User();
        LU.setVisible(true);
        LU.nameAcc.setText(userName.getText());
        LU.nameAcc.setVisible(true);
        LU.account.setVisible(true);
        LU.comboxLogIn.setVisible(false);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_backmhcActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        StaticComference_User su = new StaticComference_User();

        DefaultTableModel model = (DefaultTableModel) su.jTable1.getModel();
        su.userName.setText(userName.getText());
        List<AdUser> list = AccountDAO.checktontaiAccount(userName.getText());
        List<Participants> list1 = ParticipantsDAO.searchtenHN(list.get(0).getIdAccount(), searchname.getText());
        if (list1.isEmpty()) {
            Vector row = new Vector();
            row.add("");
            row.add("");
            row.add("");
            model.addRow(row);
            su.jTable1.setModel(model);
            su.setVisible(true);
            dispose();
        } else {
            for (Participants p : list1) {
                Vector row = new Vector();
                row.add(p.getHoinghi().getIdHn());
                row.add(p.getHoinghi().getTenHn());
                row.add(p.getHoinghi().getDiadiem().getTenDd());

                model.addRow(row);
            }
            su.jTable1.setAutoCreateRowSorter(true);
            su.jTable1.setModel(model);
            // su.setVisible(true);
            // dispose();
        }
        DefaultTableModel model2 = (DefaultTableModel) su.jTable2.getModel();
        //su.userName.setText(userName.getText());

        List<ParticipantsSignup> list2 = PaticipantsSignupDAO.searchtenHN(list.get(0).getIdAccount(), searchname.getText());
        System.out.println(list2);
        if (list2.isEmpty()) {
            Vector row = new Vector();
            row.add("");
            row.add("");
            row.add("");
            model2.addRow(row);
            su.jTable2.setModel(model);
            su.setVisible(true);
            dispose();
        } else {
            for (ParticipantsSignup p : list2) {
                Vector row = new Vector();
                row.add(p.getHoinghi().getIdHn());
                row.add(p.getHoinghi().getTenHn());
                row.add(p.getHoinghi().getDiadiem().getTenDd());

                model2.addRow(row);
            }
            su.jTable2.setAutoCreateRowSorter(true);
            su.jTable2.setModel(model);
            su.setVisible(true);
            dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        StaticComference_User su = new StaticComference_User();

        DefaultTableModel model = (DefaultTableModel) su.jTable1.getModel();
        su.userName.setText(userName.getText());
        List<AdUser> list = AccountDAO.checktontaiAccount(userName.getText());
        List<Participants> list1 = ParticipantsDAO.searchtenDD(list.get(0).getIdAccount(), searchdd.getText());
        if (list1.isEmpty()) {
            Vector row = new Vector();
            row.add("");
            row.add("");
            row.add("");
            model.addRow(row);
            su.jTable1.setModel(model);
//            su.setVisible(true);
//            dispose();
        } else {
            for (Participants p : list1) {
                Vector row = new Vector();
                row.add(p.getHoinghi().getIdHn());
                row.add(p.getHoinghi().getTenHn());
                row.add(p.getHoinghi().getDiadiem().getTenDd());

                model.addRow(row);
            }
            su.jTable1.setAutoCreateRowSorter(true);
            su.jTable1.setModel(model);
//             su.setVisible(true);
//             dispose();
        }
        DefaultTableModel model2 = (DefaultTableModel) su.jTable2.getModel();
        //su.userName.setText(userName.getText());

        List<ParticipantsSignup> list2 = PaticipantsSignupDAO.searchtenDD(list.get(0).getIdAccount(), searchdd.getText());
        if (list2.isEmpty()) {
            Vector row = new Vector();
            row.add("");
            row.add("");
            row.add("");
            model2.addRow(row);
            su.jTable2.setModel(model);
            su.setVisible(true);
            dispose();
        } else {
            for (ParticipantsSignup p : list2) {
                Vector row = new Vector();
                row.add(p.getHoinghi().getIdHn());
                row.add(p.getHoinghi().getTenHn());
                row.add(p.getHoinghi().getDiadiem().getTenDd());

                model2.addRow(row);
            }
            su.jTable2.setAutoCreateRowSorter(true);
            su.jTable2.setModel(model2);
            su.setVisible(true);
            dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaticComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaticComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaticComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaticComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaticComference_User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backmhc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable1;
    public javax.swing.JTable jTable2;
    private javax.swing.JTextField searchdd;
    private javax.swing.JTextField searchname;
    public javax.swing.JLabel userName;
    // End of variables declaration//GEN-END:variables
}
