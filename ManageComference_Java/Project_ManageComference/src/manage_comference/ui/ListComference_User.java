/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manage_comference.ui;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import static java.nio.file.Files.list;
import static java.rmi.Naming.list;
import static java.util.Collections.list;
import java.util.List;
import java.util.Vector;
import static javassist.CtMethod.ConstParameter.string;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import manage_comference.entity.AccountDAO;
import manage_comference.entity.AdUser;
import manage_comference.entity.HoiNghiDAO;
import manage_comference.entity.PaticipantsSignupDAO;
import manage_comference.entity.Hoinghi;
import manage_comference.entity.Participants;
import manage_comference.entity.ParticipantsDAO;
import manage_comference.entity.ParticipantsSignup;
import static org.hibernate.Hibernate.getClass;

/**
 *
 * @author Admin
 */
public class ListComference_User extends javax.swing.JFrame {

    /**
     * Creates new form ListComference_User
     */
    List<Hoinghi> list;
    List<Participants> list2;
    List<ParticipantsSignup> list3;
    private static DefaultTableModel model;

    public ListComference_User() {
        initComponents();
        myinit();
    }

    public void myinit() {
        if (!nameAcc.getText().equals("null")) {
            comboxLogIn.setVisible(false);
            account.setVisible(true);
        }
        if (nameAcc.getText().equals("null")) {
            account.setVisible(false);
            nameAcc.setVisible(false);
        }
        System.out.println(nameAcc.getText());
        if (nameAcc.getText().equals("admin2")) {
            suadoi.setVisible(true);
        } else {
            suadoi.setVisible(false);
        }
        if (nameAcc.getText().equals("admin2")) {
            duyetds.setVisible(true);
        } else {
            duyetds.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        account = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        comboxLogIn = new javax.swing.JComboBox<>();
        nameAcc = new javax.swing.JLabel();
        suadoi = new javax.swing.JButton();
        duyetds = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Danh sách hội nghị");

        jTable1.setForeground(new java.awt.Color(2, 1, 2));
        DefaultTableModel model = new DefaultTableModel();
        Vector column = new Vector();
        column.add("ID");
        column.add("Tên hội nghị");
        column.add("Mô tả ngắn gọn");
        column.add("Thời gian");
        column.add("Địa điểm");
        model.setColumnIdentifiers(column);
        list = HoiNghiDAO.layDanhSachHoiNghi();
        for (Hoinghi h: list) {
            Vector row = new Vector();
            row.add(h.getIdHn());
            row.add(h.getTenHn());
            row.add(h.getMota());
            row.add(h.getThoigian().toString());
            row.add(h.getDiadiem().getTenDd());
            model.addRow(row);
        }
        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(model);
        jTable1.setCellSelectionEnabled(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel2.setText("Phần mềm Manage Comference sẽ giúp bạn quản lý các hội nghị một cách thông minh và tiện dùng nhất cùng giao diện tối ưu ");

        jLabel3.setText("Nhà phát triển: Lưu Đặng Kỳ Quân");

        account.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Chọn", "Thông tin tài khoản","Thống kê hội nghị", "Đăng xuất"}));
        account.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                accountItemStateChanged(evt);
            }
        });
        account.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jButton1.setText("Xem chi tiết");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        comboxLogIn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Choose", "Log in", "Sign up" }));
        comboxLogIn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboxLogInItemStateChanged(evt);
            }
        });
        comboxLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxLogInActionPerformed(evt);
            }
        });

        nameAcc.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        nameAcc.setText("null");

        suadoi.setBackground(new java.awt.Color(255, 0, 51));
        suadoi.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        suadoi.setForeground(new java.awt.Color(255, 255, 255));
        suadoi.setText("Sửa đổi");
        suadoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suadoiActionPerformed(evt);
            }
        });

        duyetds.setBackground(new java.awt.Color(102, 255, 102));
        duyetds.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        duyetds.setForeground(new java.awt.Color(255, 255, 255));
        duyetds.setText("Duyệt dang sách đăng ký");
        duyetds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duyetdsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(547, 547, 547)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(366, 366, 366)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboxLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(nameAcc))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(suadoi, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(duyetds))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1098, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboxLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameAcc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(duyetds)
                    .addComponent(suadoi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(31, 31, 31))
        );

        nameAcc.setVisible(true);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int index;


    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
//        index= jTable1.getSelectedRow();
//       TableModel model= jTable1.getModel();
//        System.out.println(model.getValueAt(index,0));
    }//GEN-LAST:event_jTable1MouseClicked
    DetailComference dc = new DetailComference();
    EditComference dc2 = new EditComference();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//       if(nameAcc.getText().equals("admin2"))
//         EditComference dc= new EditComference();
//       else DetailComference dc = new DetailComference();
        System.out.println(nameAcc.getText());
        if (nameAcc.getText().equals("admin2")) {
            dc2.loaimh.setText("admin");
            //dc.back.setVisible(true);
            //dc2.dk.setVisible(false);
            index = jTable1.getSelectedRow();
            TableModel model = jTable1.getModel();

            index = jTable1.convertRowIndexToModel(index);
            //System.out.println(model.getValueAt(index, 0));
            int pos = ((int) model.getValueAt(index, 0));
            // System.out.println(pos);
            //System.out.println(list.get(0).getMotaChiTiet());
            ImageIcon icon = new ImageIcon(list.get(((int) model.getValueAt(index, 0)) - 1).getHinhanh().toString());
            Image img = icon.getImage();
            Image imgScale = img.getScaledInstance(dc2.hinhanh.getWidth(), dc2.hinhanh.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon i = new ImageIcon(imgScale);
            dc2.hinhanh.setIcon(i);
            dc2.userName.setText(nameAcc.getText());

            dc2.mahn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getIdHn().toString());
            dc2.motangangon.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getMota());
            dc2.tenhn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getTenHn().toString());
            dc2.motachitiet.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getMotaChitiet().toString());
            dc2.thoigian.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getThoigian().toString());
            dc2.diadiem.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getTenDd().toString());
            dc2.soluong.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getSucchua().toString());
            dc2.diachi.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getDiachi().toString());

            DefaultTableModel model2 = (DefaultTableModel) dc2.jTable1.getModel();
            System.out.println("ok");
            String id = Integer.toString((int) model.getValueAt(index, 0));
            System.out.println(id);
            list2 = HoiNghiDAO.layDanhSachKhachThamDu(id);
            System.out.println(list2);
            if (list2 != null) {
                for (Participants p : list2) {
                    Vector row = new Vector();
                    row.add(p.getAdUser().getUsername());
                    row.add(p.getAdUser().getHoten());
                    model2.addRow(row);
                }
            } else {
                System.out.println("null");
            }
            //Bang danh sach dang ky
            DefaultTableModel model3 = (DefaultTableModel) dc.jTable2.getModel();
            System.out.println("ok");
            String id3 = Integer.toString((int) model.getValueAt(index, 0));
            System.out.println(id3);
            list3 = PaticipantsSignupDAO.layDanhSachKhachDangKy(id3);
            System.out.println(list2);
            if (list3 != null) {
                for (ParticipantsSignup p : list3) {
                    Vector row = new Vector();
                    row.add(p.getAdUser().getUsername());
                    row.add(p.getAdUser().getHoten());
                    model3.addRow(row);
                }
            } else {
                System.out.println("null");
            }

            dc2.setVisible(true);
            dispose();
        } else {
            index = jTable1.getSelectedRow();
            TableModel model = jTable1.getModel();

            index = jTable1.convertRowIndexToModel(index);
            //System.out.println(model.getValueAt(index, 0));
            int pos = ((int) model.getValueAt(index, 0));
            // System.out.println(pos);
            //System.out.println(list.get(0).getMotaChiTiet());
            System.out.println(list.get(((int) model.getValueAt(index, 0)) - 1).getHinhanh().toString());
            // ImageIcon myimage= new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource(list.get(((int) model.getValueAt(index, 0)) - 1).getHinhanh().toString())));
            ImageIcon icon = new ImageIcon(list.get(((int) model.getValueAt(index, 0)) - 1).getHinhanh().toString());
            Image img = icon.getImage();
            Image imgScale = img.getScaledInstance(dc.hinhanh.getWidth(), dc.hinhanh.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon i = new ImageIcon(imgScale);
            dc.hinhanh.setIcon(i);

            dc.userName.setText(nameAcc.getText());
            dc.mahn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getIdHn().toString());
            dc.tenhn.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getTenHn().toString());
            dc.motachitiet.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getMotaChitiet().toString());
            dc.thoigian.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getThoigian().toString());
            dc.diadiem.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getTenDd().toString());
            dc.soluong.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getSucchua().toString());
            dc.diachi.setText(list.get(((int) model.getValueAt(index, 0)) - 1).getDiadiem().getDiachi().toString());

            DefaultTableModel model2 = (DefaultTableModel) dc.jTable1.getModel();
            System.out.println("ok");
            String id = Integer.toString((int) model.getValueAt(index, 0));
            System.out.println(id);
            list2 = HoiNghiDAO.layDanhSachKhachThamDu(id);
            System.out.println(list2);
            if (list2 != null) {
                for (Participants p : list2) {
                    Vector row = new Vector();
                    row.add(p.getAdUser().getUsername());
                    row.add(p.getAdUser().getHoten());
                    model2.addRow(row);
                }
            } else {
                System.out.println("null");
            }
            //Bang danh sach dang ky
            DefaultTableModel model3 = (DefaultTableModel) dc.jTable2.getModel();
            System.out.println("ok");
            String id3 = Integer.toString((int) model.getValueAt(index, 0));
            System.out.println(id3);
            list3 = PaticipantsSignupDAO.layDanhSachKhachDangKy(id3);
            System.out.println(list2);
            if (list3 != null) {
                for (ParticipantsSignup p : list3) {
                    Vector row = new Vector();
                    row.add(p.getAdUser().getUsername());
                    row.add(p.getAdUser().getHoten());
                    model3.addRow(row);
                }
            } else {
                System.out.println("null");
            }

            dc.setVisible(true);
            dispose();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboxLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxLogInActionPerformed
        if (!nameAcc.getText().equals("null")) {
            comboxLogIn.setVisible(false);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_comboxLogInActionPerformed

    private void accountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountActionPerformed
        if (nameAcc.getText().equals("null")) {
            account.setVisible(false);
        }
    }//GEN-LAST:event_accountActionPerformed

    private void comboxLogInItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboxLogInItemStateChanged
        // JComboBox comboBox= new JComboBox();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (comboxLogIn.getSelectedItem().toString().equals("Log in")) {
                LogIn log = new LogIn();
                log.loaimh.setText("list_khach");
                log.setVisible(true);
                dispose();
//                 JOptionPane.showMessageDialog(null,
//                            "Log in");
            }
            if (comboxLogIn.getSelectedItem().toString().equals("Sign up")) {
                registration reg = new registration();
                reg.loaimh.setText("list_khach");
                reg.setVisible(true);
                dispose();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxLogInItemStateChanged

    private void accountItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_accountItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (account.getSelectedItem().toString().equals("Đăng xuất")) {
                nameAcc.setText("null");
                ListComference_User LU = new ListComference_User();
                LU.setVisible(true);
                dispose();
            }
            if (account.getSelectedItem().toString().equals("Thông tin tài khoản")) {
                EditProfile ep = new EditProfile();
                List<AdUser> list = AccountDAO.checktontaiAccount(nameAcc.getText());
                ep.maid.setText(list.get(0).getIdAccount().toString());
                ep.hoten.setText(list.get(0).getHoten());
                ep.username.setText(list.get(0).getUsername());
                ep.email.setText(list.get(0).getEmail());
                ep.setVisible(true);
                dispose();
            }
            if (account.getSelectedItem().toString().equals("Thống kê hội nghị")) {
                StaticComference_User su = new StaticComference_User(nameAcc.getText());
                // System.out.println("okee");
//                DefaultTableModel model = (DefaultTableModel) su.jTable1.getModel();
//                DefaultTableModel model2 = (DefaultTableModel) su.jTable2.getModel();
                //su.userName.setText(nameAcc.getText()); 
//                List<AdUser> list4 = AccountDAO.checktontaiAccount(nameAcc.getText());
//                //System.out.println("username " + userName.getText() + "id " + list2.get(0).getIdAccount());
//                List<Participants> list5 = ParticipantsDAO.laydsthamdu(list4.get(0).getIdAccount());
//                List<ParticipantsSignup> list6 = PaticipantsSignupDAO.laydsdadangky(list4.get(0).getIdAccount());
//                //System.out.println(list);
//                if (list5 != null) {
//                    for (Participants p : list5) {
//                        Vector row = new Vector();
//                        row.add(p.getHoinghi().getIdHn());
//                        row.add(p.getHoinghi().getTenHn());
//                        row.add(p.getHoinghi().getDiadiem().getTenDd());
//                        
//                        model.addRow(row);
//                    }
//                    su.jTable1.setAutoCreateRowSorter(true);
//                } else {
//                    System.out.println("null");
//                }
//                 if (list6 != null) {
//                    for (ParticipantsSignup p : list6) {
//                        Vector row = new Vector();
//                        row.add(p.getHoinghi().getIdHn());
//                        row.add(p.getHoinghi().getTenHn());
//                        row.add(p.getHoinghi().getDiadiem().getTenDd());
//                        
//                        model2.addRow(row);
//                    }
//                    su.jTable2.setAutoCreateRowSorter(true);
//                } else {
//                    System.out.println("null");
//                }
                su.setVisible(true);
                // dispose();
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_accountItemStateChanged

    private void suadoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suadoiActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_suadoiActionPerformed

    private void duyetdsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duyetdsActionPerformed
        DuyetDSDangKy duyet = new DuyetDSDangKy();
        duyet.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_duyetdsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListComference_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListComference_User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> account;
    public javax.swing.JComboBox<String> comboxLogIn;
    public javax.swing.JButton duyetds;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    public javax.swing.JLabel nameAcc;
    public javax.swing.JButton suadoi;
    // End of variables declaration//GEN-END:variables

    private void depose() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
