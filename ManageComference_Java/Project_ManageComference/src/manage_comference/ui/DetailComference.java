/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manage_comference.ui;

import javax.swing.JOptionPane;
import static java.nio.file.Files.list;
import static java.rmi.Naming.list;
import static java.util.Collections.list;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import manage_comference.entity.AccountDAO;
import manage_comference.entity.AdUser;
import manage_comference.entity.HoiNghiDAO;
import manage_comference.entity.Hoinghi;
import manage_comference.entity.Participants;
import manage_comference.entity.ParticipantsDAO;
import manage_comference.entity.ParticipantsSignup;
import manage_comference.entity.PaticipantsSignupDAO;
import manage_comference.util.NewHibernateUtil;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Admin
 */
public class DetailComference extends javax.swing.JFrame {

    /**
     * Creates new form DetailComference
     */
//    static DefaultTableModel model;
    public DetailComference() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tenhn = new javax.swing.JLabel();
        thoigian = new javax.swing.JLabel();
        soluong = new javax.swing.JLabel();
        hinhanh = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dk = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        diadiem = new javax.swing.JLabel();
        diachi = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        mahn = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        userName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        motachitiet = new javax.swing.JTextArea();
        loaimh = new javax.swing.JLabel();
        huydk = new javax.swing.JButton();
        loaibang = new javax.swing.JLabel();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 904));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Chi tiết hội nghị");

        jLabel2.setText("Tên hội nghị:");

        jLabel4.setText("Mô tả chi tiết:");

        jLabel5.setText("Thời gian:");

        jLabel6.setText("Địa điểm:");

        tenhn.setText("jLabel7");

        thoigian.setText("jLabel9");

        soluong.setText("jLabel10");

        hinhanh.setText("Hình ảnh");

        jLabel12.setText("Danh sách người tham dư");

        dk.setText("Đăng ký tham dự");
        dk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dkActionPerformed(evt);
            }
        });

        jLabel14.setText("Số lượng cho phép");

        jLabel15.setText("Địa chỉ");

        diadiem.setText("jLabel16");

        diachi.setText("jLabel17");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên đăng nhập", "Họ tên"
            }
        ));
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel7.setText("Mã hội nghị");

        mahn.setText("mahn");

        jLabel8.setText("Danh sách người đăng ký hội nghị");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên đăng nhập", "Họ Tên"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        userName.setText("null");

        motachitiet.setEditable(false);
        motachitiet.setColumns(20);
        motachitiet.setRows(5);
        jScrollPane3.setViewportView(motachitiet);

        loaimh.setText("jLabel9");

        huydk.setText("Hủy đăng ký tham dự");
        huydk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huydkActionPerformed(evt);
            }
        });

        loaibang.setText("jLabel9");

        back.setText("Quay về trang chính");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel6)))
                            .addComponent(back))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(diadiem, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tenhn)
                                        .addGap(330, 330, 330)
                                        .addComponent(jLabel7)
                                        .addGap(149, 149, 149)
                                        .addComponent(mahn))
                                    .addComponent(diachi)
                                    .addComponent(thoigian)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel3)
                                .addGap(66, 66, 66)
                                .addComponent(hinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(loaibang)
                                .addGap(335, 335, 335))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(108, 108, 108)
                                .addComponent(soluong)))))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(454, 454, 454)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loaimh)
                .addGap(53, 53, 53)
                .addComponent(userName)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(huydk)
                    .addComponent(dk))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dk)
                    .addComponent(jLabel1)
                    .addComponent(userName)
                    .addComponent(loaimh)
                    .addComponent(back)
                    .addComponent(loaibang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(huydk)
                        .addGap(79, 79, 79)
                        .addComponent(jLabel3))
                    .addComponent(hinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tenhn)
                    .addComponent(jLabel7)
                    .addComponent(mahn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel14)
                    .addComponent(soluong)
                    .addComponent(thoigian))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(diadiem))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(diachi))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        userName.setVisible(false);
        loaimh.setVisible(false);
        huydk.setVisible(false);
        loaibang.setVisible(false);
        back.setVisible(true);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dkActionPerformed
        if (userName.getText().equals("null")) {
            Object[] options = {"Đăng Nhập", "Chưa có tài khoản"};
            int YesOrNo = JOptionPane.showOptionDialog(null,
                    "Bạn đã có tài khoản chưa ?",
                    "Chú ý",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);

            registration reg = new registration();

            reg.idhn.setText(mahn.getText().toString());
            reg.loaimh.setText("detail_khach");
            reg.sizeDiaDiem.setText(soluong.getText().toString());

            if (YesOrNo == 0) {
                LogIn log = new LogIn();
//            LogIn login = new LogIn();
                log.hn.setText(mahn.getText().toString());
                log.loaimh.setText("detail_khach");
                log.sizeDiaDiem.setText(soluong.getText().toString());
                log.setVisible(true);
                dispose();
            } else {

                reg.setVisible(true);
                dispose();
            }
        } else {

            List<AdUser> list2 = AccountDAO.checktontaiAccount(userName.getText());
            List<Participants> list3 = ParticipantsDAO.checkdangkyhn(list2.get(0).getIdAccount(), Integer.parseInt(mahn.getText()));
            List<ParticipantsSignup> list4 = PaticipantsSignupDAO.checkdangkyhn(list2.get(0).getIdAccount(), Integer.parseInt(mahn.getText()));
            if (list4.isEmpty()) {
                if (list3.isEmpty()) {
                    List<Long> listCountUser;
                    listCountUser = ParticipantsDAO.countUser(Integer.parseInt(mahn.getText()));
                    Long count = listCountUser.get(0);
                    System.out.println(count);
//                        System.out.println("countUser: " + listCountUser.get(0) + " size of diadiem: " + sizeDiaDiem.getText());
//                        Kiểm tra diadiem đó có full người tham dự chưa
                    if (count < Long.parseLong(soluong.getText())) {
                        Session session = NewHibernateUtil.getSessionFactory()
                                .openSession();

                        Transaction transaction = null;
                        try {
                            transaction = session.beginTransaction();
//                                    System.out.println("id_par: " + list2.get(0).getIdAccount() + " id_com " + Integer.parseInt(idhn.getText()));
                            Query q = session.createSQLQuery("insert into participants_signup values(null,:ID_PAR,:ID_COMFERENCE)");
                            q.setParameter("ID_PAR", list2.get(0).getIdAccount());
                            q.setParameter("ID_COMFERENCE", Integer.parseInt(mahn.getText()));
                            q.executeUpdate();
                            transaction.commit();
                            JOptionPane.showMessageDialog(null,
                                    "Đăng ký tham dự hội nghị thành công");

//                                 Quay lai trang listComference
                            ListComference_User LU = new ListComference_User();
                            LU.setVisible(true);
                            LU.nameAcc.setText(list2.get(0).getUsername());
                            LU.nameAcc.setVisible(true);
                            LU.account.setVisible(true);
                            LU.comboxLogIn.setVisible(false);
                            dispose();

                        } catch (HibernateException ex) {
//Log the exception
                            System.err.println(ex);
                        } finally {
                            session.close();
                        }

                    } else {
                        JOptionPane.showMessageDialog(null,
                                "Hội nghị đã đủ chỗ, không đăng ký thêm được");
                        ListComference_User LU = new ListComference_User();
                        LU.setVisible(true);
                        LU.nameAcc.setText(list2.get(0).getUsername());
                        LU.nameAcc.setVisible(true);
                        LU.account.setVisible(true);
                        LU.comboxLogIn.setVisible(false);
                        dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Bạn đã đăng ký hội nghị này rồi");
                    ListComference_User LU = new ListComference_User();
                    LU.setVisible(true);
                    LU.nameAcc.setText(userName.getText());
                    LU.nameAcc.setVisible(true);
                    LU.account.setVisible(true);
                    LU.comboxLogIn.setVisible(false);
                    dispose();
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Bạn đã đăng ký hội nghị này rồi, đang chờ admin duyệt");
                ListComference_User LU = new ListComference_User();
                LU.setVisible(true);
                LU.nameAcc.setText(userName.getText());
                LU.nameAcc.setVisible(true);
                LU.account.setVisible(true);
                LU.comboxLogIn.setVisible(false);
                dispose();
            }

        }

    }//GEN-LAST:event_dkActionPerformed

    private void huydkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huydkActionPerformed
        Object[] options = {"Quay về", "Hủy đăng ký"};
        int YesOrNo = JOptionPane.showOptionDialog(null,
                "Bạn muốn thao tác nào?",
                "Chú ý",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[1]);

        if (YesOrNo == 0) {
            StaticComference_User su = new StaticComference_User(userName.getText());
            su.setVisible(true);
            dispose();
        } else {
            if (loaibang.getText().equals("chodangky")) {
                //  System.out.println("cho dang ky");
                //  System.out.println("username "+userName.getText());
                List<AdUser> list = AccountDAO.checktontaiAccount(userName.getText());
                List<ParticipantsSignup> list2 = PaticipantsSignupDAO.checkdangkyhn(list.get(0).getIdAccount(), Integer.parseInt(mahn.getText()));
                List<Hoinghi> list5 = HoiNghiDAO.layDanhSachHoiNghiTheoID(Integer.parseInt(mahn.getText()));
                if (list5.isEmpty()) {
                    //  System.out.println(list3.get(0).getId());
                    Session session = NewHibernateUtil.getSessionFactory()
                            .openSession();

                    Transaction transaction = null;
                    try {
                        transaction = session.beginTransaction();
                        Query q = session.createSQLQuery("DELETE FROM participants_signup WHERE ID=:id");
                        q.setParameter("id", list2.get(0).getId());
                        q.executeUpdate();
                        transaction.commit();
                        JOptionPane.showMessageDialog(null,
                                "Hủy đăng ký thành công");

                        StaticComference_User su = new StaticComference_User(userName.getText());
                        su.setVisible(false);
                        StaticComference_User su2 = new StaticComference_User(userName.getText());
                        su2.setVisible(true);
                        dispose();
                    } catch (HibernateException ex) {
//Log the exception
                        transaction.rollback();
                        System.err.println(ex);
                    } finally {
                        session.close();

                    }
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Hội nghị đã diễn ra, không thể hủy đăng ký");
                    StaticComference_User su = new StaticComference_User(userName.getText());
                    su.setVisible(true);
                    dispose();
                }

            } else if (loaibang.getText().equals("thamdu")) {
                // System.out.println("thamdu");
                List<AdUser> list = AccountDAO.checktontaiAccount(userName.getText());
                List<Participants> list2 = ParticipantsDAO.checkdangkyhn(list.get(0).getIdAccount(), Integer.parseInt(mahn.getText()));
                List<Hoinghi> list5 = HoiNghiDAO.layDanhSachHoiNghiTheoID(Integer.parseInt(mahn.getText()));
                if (list5.isEmpty()) {
                    //  System.out.println(list3.get(0).getId());
                    Session session = NewHibernateUtil.getSessionFactory()
                            .openSession();

                    Transaction transaction = null;
                    try {
                        transaction = session.beginTransaction();
                        Query q = session.createSQLQuery("DELETE FROM PARTICIPANTS WHERE ID=:id");
                        q.setParameter("id", list2.get(0).getId());
                        q.executeUpdate();
                        transaction.commit();
                        JOptionPane.showMessageDialog(null,
                                "Hủy đăng ký thành công");

                        StaticComference_User su = new StaticComference_User(userName.getText());
                        su.setVisible(false);
                        StaticComference_User su2 = new StaticComference_User(userName.getText());
                        su2.setVisible(true);
                        dispose();
                    } catch (HibernateException ex) {
//Log the exception
                        transaction.rollback();
                        System.err.println(ex);
                    } finally {
                        session.close();

                    }
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Hội nghị đã diễn ra, không thể hủy đăng ký");
                    StaticComference_User su = new StaticComference_User(userName.getText());
                    su.setVisible(true);
                    dispose();
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_huydkActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        ListComference_User LU = new ListComference_User();
        LU.setVisible(true);
        LU.nameAcc.setText(userName.getText());
        LU.nameAcc.setVisible(true);
        LU.account.setVisible(true);
         if(loaimh.getText().equals("admin"))
         {
             LU.suadoi.setVisible(true);
             LU.duyetds.setVisible(true);
         } 
        LU.comboxLogIn.setVisible(false);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailComference.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailComference.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailComference.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailComference.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailComference().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton back;
    public javax.swing.JLabel diachi;
    public javax.swing.JLabel diadiem;
    public javax.swing.JButton dk;
    public javax.swing.JLabel hinhanh;
    public javax.swing.JButton huydk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable jTable1;
    public javax.swing.JTable jTable2;
    public javax.swing.JLabel loaibang;
    public javax.swing.JLabel loaimh;
    public javax.swing.JLabel mahn;
    public javax.swing.JTextArea motachitiet;
    public javax.swing.JLabel soluong;
    public javax.swing.JLabel tenhn;
    public javax.swing.JLabel thoigian;
    public javax.swing.JLabel userName;
    // End of variables declaration//GEN-END:variables
}
